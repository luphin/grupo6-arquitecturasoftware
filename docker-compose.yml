services:
  # ===== SERVICIO DE MODERACIÓN =====
  moderation-service:
    build:
      context: ./moderation-chat-service
      dockerfile: Dockerfile
    container_name: moderation-service
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
    env_file:
      - .env
    volumes:
      - ./moderation-chat-service/app:/app/app
      - ./moderation-chat-service/scripts:/app/scripts
      - ./logs/service:/app/logs
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - moderation-network
    restart: unless-stopped

  # ===== MONGODB =====
  mongodb:
    image: mongo:7.0
    container_name: moderation-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=moderation_db
    networks:
      - moderation-network
    restart: unless-stopped

  # ===== REDIS (Cache) =====
  redis:
    image: redis:7-alpine
    container_name: moderation-redis
    ports:
      - "6379:6379"
    command: redis-server --save "" --appendonly no  # ← SIN persistencia
    volumes:
      - redis_data:/data
    networks:
      - moderation-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # ===== RABBITMQ (Event Bus) =====
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: moderation-rabbitmq
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - moderation-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  mongodb_data:
  redis_data:
  rabbitmq_data:

networks:
  moderation-network:
    driver: bridge
